{"version":3,"sources":["reportWebVitals.js","common/header/Header.js","screens/home/Home.js","screens/Controller.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","state","className","Typography","variant","gutterBottom","Component","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Home","handleChange","event","val","setState","planetClickHandler","planetId","planetData","planetList","objIndex","findIndex","obj","isFavourite","console","log","xhr","XMLHttpRequest","that","this","addEventListener","readyState","status","JSON","parse","responseText","open","baseUrl","setRequestHeader","send","classes","AppBar","position","Tabs","aria-label","centered","onChange","Tab","label","GridList","cellHeight","cols","gridListMain","map","GridListTile","src","alt","GridListTileBar","title","name","root","titleBar","actionIcon","IconButton","onClick","color","withStyles","theme","display","justifyContent","overflow","backgroundColor","palette","background","paper","transform","primary","light","Controller","exact","path","render","ReactDOM","document","getElementById"],"mappings":"4MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,+ECgBCQ,E,kDAlBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,OACE,8BACE,wBAAQC,UAAU,aAAlB,SACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,6B,GAVWC,a,6GC8BrB,SAASC,EAASP,GAAQ,IAChBQ,EAAqCR,EAArCQ,SAAUC,EAA2BT,EAA3BS,MAAOC,EAAoBV,EAApBU,MAAUC,EADZ,YACsBX,EADtB,8BAEvB,OACE,6CACEY,KAAK,WACLC,OAAQJ,IAAUC,EAClBI,GAAE,0BAAqBJ,GACvBK,kBAAA,qBAA+BL,IAC3BC,GALN,aAOGF,IAAUC,GAAS,cAACP,EAAA,EAAD,UAAaK,O,IAKjCQ,E,kDACJ,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IA0BRiB,aAAe,SAACC,EAAOC,GACrB,EAAKC,SAAS,CAAEX,MAAOU,KA5BN,EA+BnBE,mBAAqB,SAACC,GACpB,IAAIC,EAAa,EAAKtB,MAAMuB,WAExBC,EAAWF,EAAWG,WAAU,SAACC,GAAD,OAASA,EAAIb,KAAOQ,MAEf,IAArCC,EAAWE,GAAUG,YACvBL,EAAWE,GAAUG,aAAc,EAEnCL,EAAWE,GAAUG,aAAc,EAGrCC,QAAQC,IAAIP,GAEZ,EAAKH,SAAS,CAAEI,WAAYD,KA1C5B,EAAKtB,MAAQ,CACXuB,WAAY,GACZf,MAAO,GAJQ,E,gEASjB,IACIsB,EAAM,IAAIC,eACVC,EAAOC,KAEXH,EAAII,iBAAiB,oBAAoB,WAChB,IAAnBJ,EAAIK,YAAmC,MAAfL,EAAIM,SAC9BJ,EAAKb,SAAS,CACZI,WAAYc,KAAKC,MAAML,KAAKM,gBAE9BX,QAAQC,IAAIG,EAAKhC,MAAMuB,gBAI3BO,EAAIU,KAAK,MAAOP,KAAKlC,MAAM0C,SAC3BX,EAAIY,iBAAiB,gBAAiB,YACtCZ,EAAIa,KAfO,Q,+BAsCH,IAAD,OACCC,EAAYX,KAAKlC,MAAjB6C,QACR,OACE,gCACE,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,CACEvC,MAAOyB,KAAKjC,MAAMQ,MAClBwC,aAAW,sBACXC,UAAQ,EACRC,SAAUjB,KAAKjB,aAJjB,UAME,cAACmC,EAAA,EAAD,CAAKC,MAAM,gBACX,cAACD,EAAA,EAAD,CAAKC,MAAM,qBAGf,cAAC9C,EAAD,CAAUE,MAAOyB,KAAKjC,MAAMQ,MAAOC,MAAO,EAA1C,SACE,qBAAKR,UAAU,OAAf,SACE,cAACoD,EAAA,EAAD,CACEC,WAAY,IACZC,KAAM,EACNtD,UAAW2C,EAAQY,aAHrB,SAKGvB,KAAKjC,MAAMuB,WAAWkC,KAAI,SAAC5C,GAAD,OACzB,eAAC6C,EAAA,EAAD,CAEEzD,UAAU,oBAFZ,UAIE,qBACE0D,IAAI,+DACJC,IAAK/C,EAAGA,KAEV,cAACgD,EAAA,EAAD,CACEC,MAAOjD,EAAGkD,KACVnB,QAAS,CACPoB,KAAMpB,EAAQqB,SACdH,MAAOlB,EAAQkB,OAEjBI,WACE,cAACC,EAAA,EAAD,CACEnB,aAAA,qBAA0BnC,EAAGA,IAC7BuD,QAAS,kBAAM,EAAKhD,mBAAmBP,EAAGA,KAF5C,UAIsB,IAAnBA,EAAGc,YACF,cAAC,IAAD,CAAgB1B,UAAW2C,EAAQkB,QAEnC,cAAC,IAAD,CAAUO,MAAM,kBArBnB,OAASxD,EAAGA,aA+B3B,cAACP,EAAD,CAAUE,MAAOyB,KAAKjC,MAAMQ,MAAOC,MAAO,EAA1C,SACE,qBAAKR,UAAU,QAAf,SACE,cAACoD,EAAA,EAAD,CACEC,WAAY,IACZC,KAAM,EACNtD,UAAW2C,EAAQY,aAHrB,SAKGvB,KAAKjC,MAAMuB,WAAWkC,KACrB,SAAC5C,GAAD,OACEA,EAAGc,aACD,eAAC+B,EAAA,EAAD,CAEEzD,UAAU,oBAFZ,UAIE,qBACE0D,IAAI,+DACJC,IAAK/C,EAAGA,KAEV,cAACgD,EAAA,EAAD,CACEC,MAAOjD,EAAGkD,KACVnB,QAAS,CACPoB,KAAMpB,EAAQqB,SACdH,MAAOlB,EAAQkB,OAEjBI,WACE,cAACC,EAAA,EAAD,CACEnB,aAAA,qBAA0BnC,EAAGA,IAC7BuD,QAAS,kBAAM,EAAKhD,mBAAmBP,EAAGA,KAF5C,UAIsB,IAAnBA,EAAGc,YACF,cAAC,IAAD,CAAgB1B,UAAW2C,EAAQkB,QAEnC,cAAC,IAAD,CAAUO,MAAM,kBArBnB,OAASxD,EAAGA,oB,GAnHpBR,aAwJJiE,eA1LA,SAACC,GAAD,MAAY,CACzBP,KAAM,CACJQ,QAAS,OACTC,eAAgB,eAChBC,SAAU,SACVC,gBAAiBJ,EAAMK,QAAQC,WAAWC,OAE5CtB,aAAc,CACZuB,UAAW,iBAEbjB,MAAO,CACLO,MAAOE,EAAMK,QAAQI,QAAQC,OAE/BhB,SAAU,CACRY,WACE,2FA2KSP,CAAmBvD,GChLnBmE,E,kDApBb,aAAe,IAAD,8BACZ,gBACKzC,QAAU,oDACf,EAAKzC,MAAQ,GAHD,E,qDAKJ,IAAD,OACP,OACE,cAAC,IAAD,UACE,qBAAKC,UAAU,iBAAf,SACE,cAAC,IAAD,CACEkF,OAAK,EACLC,KAAK,WACLC,OAAQ,SAACtF,GAAD,OAAW,cAAC,EAAD,2BAAUA,GAAV,IAAiB0C,QAAS,EAAKA,sB,GAbrCpC,a,MCIzBiF,IAASD,OACP,cAAC,EAAD,IAAgBE,SAASC,eAAe,SAM1CnG,M","file":"static/js/main.369f18a8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\r\nimport \"./Header.css\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"app-header\">\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Planets\r\n          </Typography>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../common/header/Header\";\r\nimport \"./Home.css\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridListMain: {\r\n    transform: \"translateZ(0)\",\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\r\n  },\r\n});\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Typography>{children}</Typography>}\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      planetList: [],\r\n      value: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let data = null;\r\n    let xhr = new XMLHttpRequest();\r\n    let that = this;\r\n\r\n    xhr.addEventListener(\"readystatechange\", function () {\r\n      if (xhr.readyState === 4 && xhr.status === 200) {\r\n        that.setState({\r\n          planetList: JSON.parse(this.responseText),\r\n        });\r\n        console.log(that.state.planetList);\r\n      }\r\n    });\r\n\r\n    xhr.open(\"GET\", this.props.baseUrl);\r\n    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n    xhr.send(data);\r\n  }\r\n\r\n  handleChange = (event, val) => {\r\n    this.setState({ value: val });\r\n  };\r\n\r\n  planetClickHandler = (planetId) => {\r\n    let planetData = this.state.planetList;\r\n\r\n    let objIndex = planetData.findIndex((obj) => obj.id === planetId);\r\n\r\n    if (planetData[objIndex].isFavourite === true) {\r\n      planetData[objIndex].isFavourite = false;\r\n    } else {\r\n      planetData[objIndex].isFavourite = true;\r\n    }\r\n\r\n    console.log(planetData);\r\n\r\n    this.setState({ planetList: planetData });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <AppBar position=\"static\">\r\n          <Tabs\r\n            value={this.state.value}\r\n            aria-label=\"simple tabs example\"\r\n            centered\r\n            onChange={this.handleChange}\r\n          >\r\n            <Tab label=\"All Planets\" />\r\n            <Tab label=\"Fav Planets\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={this.state.value} index={0}>\r\n          <div className=\"left\">\r\n            <GridList\r\n              cellHeight={150}\r\n              cols={4}\r\n              className={classes.gridListMain}\r\n            >\r\n              {this.state.planetList.map((id) => (\r\n                <GridListTile\r\n                  key={\"grid\" + id.id}\r\n                  className=\"planets-grid-item\"\r\n                >\r\n                  <img\r\n                    src=\"https://cdn.mos.cms.futurecdn.net/nGUneraFwt2iCnuu2iSWFf.jpg\"\r\n                    alt={id.id}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={id.name}\r\n                    classes={{\r\n                      root: classes.titleBar,\r\n                      title: classes.title,\r\n                    }}\r\n                    actionIcon={\r\n                      <IconButton\r\n                        aria-label={`info about ${id.id}`}\r\n                        onClick={() => this.planetClickHandler(id.id)}\r\n                      >\r\n                        {id.isFavourite === false ? (\r\n                          <StarBorderIcon className={classes.title} />\r\n                        ) : (\r\n                          <StarIcon color=\"primary\" />\r\n                        )}\r\n                      </IconButton>\r\n                    }\r\n                  ></GridListTileBar>\r\n                </GridListTile>\r\n              ))}\r\n            </GridList>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel value={this.state.value} index={1}>\r\n          <div className=\"right\">\r\n            <GridList\r\n              cellHeight={150}\r\n              cols={4}\r\n              className={classes.gridListMain}\r\n            >\r\n              {this.state.planetList.map(\r\n                (id) =>\r\n                  id.isFavourite && (\r\n                    <GridListTile\r\n                      key={\"grid\" + id.id}\r\n                      className=\"planets-grid-item\"\r\n                    >\r\n                      <img\r\n                        src=\"https://cdn.mos.cms.futurecdn.net/nGUneraFwt2iCnuu2iSWFf.jpg\"\r\n                        alt={id.id}\r\n                      />\r\n                      <GridListTileBar\r\n                        title={id.name}\r\n                        classes={{\r\n                          root: classes.titleBar,\r\n                          title: classes.title,\r\n                        }}\r\n                        actionIcon={\r\n                          <IconButton\r\n                            aria-label={`info about ${id.id}`}\r\n                            onClick={() => this.planetClickHandler(id.id)}\r\n                          >\r\n                            {id.isFavourite === false ? (\r\n                              <StarBorderIcon className={classes.title} />\r\n                            ) : (\r\n                              <StarIcon color=\"primary\" />\r\n                            )}\r\n                          </IconButton>\r\n                        }\r\n                      ></GridListTileBar>\r\n                    </GridListTile>\r\n                  )\r\n              )}\r\n            </GridList>\r\n          </div>\r\n        </TabPanel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"../screens/home/Home\";\r\n\r\nclass Controller extends Component {\r\n  constructor() {\r\n    super();\r\n    this.baseUrl = \"https://assignment-machstatz.herokuapp.com/planet\";\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"main-container\">\r\n          <Route\r\n            exact\r\n            path=\"/planets\"\r\n            render={(props) => <Home {...props} baseUrl={this.baseUrl} />}\r\n          />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controller;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Controller from \"./screens/Controller\";\nimport \"typeface-roboto\";\n\n\nReactDOM.render(\n  <Controller />, document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}